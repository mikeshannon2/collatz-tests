==1199== Memcheck, a memory error detector
==1199== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1199== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==1199== Command: ./TestCollatz
==1199== 
Running main() from gtest_main.cc
[==========] Running 18 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 18 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (36 ms)
[ RUN      ] CollatzFixture.cycle_length_1
[       OK ] CollatzFixture.cycle_length_1 (4 ms)
[ RUN      ] CollatzFixture.cycle_length_2
[       OK ] CollatzFixture.cycle_length_2 (5 ms)
[ RUN      ] CollatzFixture.cycle_length_3
[       OK ] CollatzFixture.cycle_length_3 (3 ms)
[ RUN      ] CollatzFixture.cycle_length_4
[       OK ] CollatzFixture.cycle_length_4 (3 ms)
[ RUN      ] CollatzFixture.cycle_length_5
[       OK ] CollatzFixture.cycle_length_5 (4 ms)
[ RUN      ] CollatzFixture.cycle_length_6
[       OK ] CollatzFixture.cycle_length_6 (3 ms)
[ RUN      ] CollatzFixture.cycle_length_7
[       OK ] CollatzFixture.cycle_length_7 (3 ms)
[ RUN      ] CollatzFixture.cycle_length_8
[       OK ] CollatzFixture.cycle_length_8 (7 ms)
[ RUN      ] CollatzFixture.cycle_length_9
[       OK ] CollatzFixture.cycle_length_9 (3 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (3 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (3 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (3 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (7 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (12 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (9 ms)
[----------] 18 tests from CollatzFixture (141 ms total)

[----------] Global test environment tear-down
[==========] 18 tests from 1 test case ran. (231 ms total)
[  PASSED  ] 18 tests.
==1199== 
==1199== HEAP SUMMARY:
==1199==     in use at exit: 72,704 bytes in 1 blocks
==1199==   total heap usage: 295 allocs, 294 frees, 141,447 bytes allocated
==1199== 
==1199== LEAK SUMMARY:
==1199==    definitely lost: 0 bytes in 0 blocks
==1199==    indirectly lost: 0 bytes in 0 blocks
==1199==      possibly lost: 0 bytes in 0 blocks
==1199==    still reachable: 72,704 bytes in 1 blocks
==1199==         suppressed: 0 bytes in 0 blocks
==1199== Rerun with --leak-check=full to see details of leaked memory
==1199== 
==1199== For counts of detected and suppressed errors, rerun with: -v
==1199== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:91.89% of 37
Branches executed:100.00% of 32
Taken at least once:81.25% of 32
Calls executed:100.00% of 16
Creating 'Collatz.c++.gcov'
